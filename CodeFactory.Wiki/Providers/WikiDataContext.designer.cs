#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeFactory.Wiki.Providers
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Wiki")]
	public partial class WikiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLinqWiki(LinqWiki instance);
    partial void UpdateLinqWiki(LinqWiki instance);
    partial void DeleteLinqWiki(LinqWiki instance);
    partial void InsertLinqWikiHistory(LinqWikiHistory instance);
    partial void UpdateLinqWikiHistory(LinqWikiHistory instance);
    partial void DeleteLinqWikiHistory(LinqWikiHistory instance);
    partial void InsertLinqWorkWikiItem(LinqWorkWikiItem instance);
    partial void UpdateLinqWorkWikiItem(LinqWorkWikiItem instance);
    partial void DeleteLinqWorkWikiItem(LinqWorkWikiItem instance);
    partial void InsertWikiCategory(WikiCategory instance);
    partial void UpdateWikiCategory(WikiCategory instance);
    partial void DeleteWikiCategory(WikiCategory instance);
    partial void InsertWikiAuthorizer(WikiAuthorizer instance);
    partial void UpdateWikiAuthorizer(WikiAuthorizer instance);
    partial void DeleteWikiAuthorizer(WikiAuthorizer instance);
    #endregion
		
		public WikiDataContext() : 
				base(global::CodeFactory.Wiki.Properties.Settings.Default.WikiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WikiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WikiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WikiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WikiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LinqWiki> LinqWikis
		{
			get
			{
				return this.GetTable<LinqWiki>();
			}
		}
		
		public System.Data.Linq.Table<LinqWikiHistory> LinqWikiHistories
		{
			get
			{
				return this.GetTable<LinqWikiHistory>();
			}
		}
		
		public System.Data.Linq.Table<LinqWorkWikiItem> LinqWorkWikiItems
		{
			get
			{
				return this.GetTable<LinqWorkWikiItem>();
			}
		}
		
		public System.Data.Linq.Table<WikiCategory> WikiCategories
		{
			get
			{
				return this.GetTable<WikiCategory>();
			}
		}
		
		public System.Data.Linq.Table<WikiAuthorizer> WikiAuthorizers
		{
			get
			{
				return this.GetTable<WikiAuthorizer>();
			}
		}
		
		[Function(Name="dbo.GetRandomWiki")]
		public ISingleResult<GetRandomWikiResult> GetRandomWiki([Parameter(DbType="VarChar(512)")] string applicationName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName);
			return ((ISingleResult<GetRandomWikiResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetRelatedWiki")]
		public ISingleResult<GetRelatedWikiResult> GetRelatedWiki([Parameter(DbType="VarChar(512)")] string applicationName, [Parameter(DbType="VarChar(512)")] string keyword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationName, keyword);
			return ((ISingleResult<GetRelatedWikiResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.Wikis")]
	public partial class LinqWiki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _title;
		
		private string _description;
		
		private string _content;
		
		private string _author;
		
		private bool _isVisible;
		
		private string _slug;
		
		private string _category;
		
		private string _keywords;
		
		private System.DateTime _dateCreated;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
		private string _lastUpdatedBy;
		
		private int _reachLevel;
		
		private bool _editable;
		
		private string _editor;
		
		private string _departmentArea;
		
		private string _applicationName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnLastUpdatedByChanging(string value);
    partial void OnLastUpdatedByChanged();
    partial void OnReachLevelChanging(int value);
    partial void OnReachLevelChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnDepartmentAreaChanging(string value);
    partial void OnDepartmentAreaChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    #endregion
		
		public LinqWiki()
		{
			OnCreated();
		}
		
		[Column(Name="id", Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="title", Storage="_title", DbType="VarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_description", DbType="VarChar(1024)")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="content", Storage="_content", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Name="author", Storage="_author", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[Column(Name="isVisible", Storage="_isVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._isVisible;
			}
			set
			{
				if ((this._isVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._isVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[Column(Name="slug", Storage="_slug", DbType="VarChar(128)")]
		public string Slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[Column(Name="category", Storage="_category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Name="keywords", Storage="_keywords", DbType="VarChar(1024)")]
		public string Keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[Column(Name="dateCreated", Storage="_dateCreated", AutoSync=AutoSync.OnInsert, DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Name="lastUpdated", Storage="_lastUpdated", AutoSync=AutoSync.OnInsert, DbType="DateTime", IsDbGenerated=true, IsVersion=true)]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._lastUpdated;
			}
			set
			{
				if ((this._lastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._lastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[Column(Name="lastUpdatedBy", Storage="_lastUpdatedBy", DbType="VarChar(50)")]
		public string LastUpdatedBy
		{
			get
			{
				return this._lastUpdatedBy;
			}
			set
			{
				if ((this._lastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._lastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[Column(Name="reachLevel", Storage="_reachLevel", DbType="Int NOT NULL")]
		public int ReachLevel
		{
			get
			{
				return this._reachLevel;
			}
			set
			{
				if ((this._reachLevel != value))
				{
					this.OnReachLevelChanging(value);
					this.SendPropertyChanging();
					this._reachLevel = value;
					this.SendPropertyChanged("ReachLevel");
					this.OnReachLevelChanged();
				}
			}
		}
		
		[Column(Name="editable", Storage="_editable", DbType="Bit NOT NULL")]
		public bool Editable
		{
			get
			{
				return this._editable;
			}
			set
			{
				if ((this._editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[Column(Name="editor", Storage="_editor", DbType="VarChar(50)")]
		public string Editor
		{
			get
			{
				return this._editor;
			}
			set
			{
				if ((this._editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[Column(Name="departmentArea", Storage="_departmentArea", DbType="VarChar(50)")]
		public string DepartmentArea
		{
			get
			{
				return this._departmentArea;
			}
			set
			{
				if ((this._departmentArea != value))
				{
					this.OnDepartmentAreaChanging(value);
					this.SendPropertyChanging();
					this._departmentArea = value;
					this.SendPropertyChanged("DepartmentArea");
					this.OnDepartmentAreaChanged();
				}
			}
		}
		
		[Column(Name="applicationName", Storage="_applicationName", DbType="VarChar(512) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplicationName
		{
			get
			{
				return this._applicationName;
			}
			set
			{
				if ((this._applicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._applicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WikisHistory")]
	public partial class LinqWikiHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _trackingNumber;
		
		private System.Guid _id;
		
		private string _title;
		
		private string _description;
		
		private string _content;
		
		private string _author;
		
		private bool _isVisible;
		
		private string _slug;
		
		private string _category;
		
		private string _keywords;
		
		private System.DateTime _dateCreated;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
		private System.Nullable<System.DateTime> _expirationDate;
		
		private string _lastUpdatedBy;
		
		private int _reachLevel;
		
		private bool _editable;
		
		private string _editor;
		
		private string _departmentArea;
		
		private int _status;
		
		private string _messages;
		
		private string _authorizer;
		
		private int _action;
		
		private string _ipAddress;
		
		private string _applicationName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackingNumberChanging(System.Guid value);
    partial void OnTrackingNumberChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnLastUpdatedByChanging(string value);
    partial void OnLastUpdatedByChanged();
    partial void OnReachLevelChanging(int value);
    partial void OnReachLevelChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnDepartmentAreaChanging(string value);
    partial void OnDepartmentAreaChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnMessagesChanging(string value);
    partial void OnMessagesChanged();
    partial void OnAuthorizerChanging(string value);
    partial void OnAuthorizerChanged();
    partial void OnActionChanging(int value);
    partial void OnActionChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    #endregion
		
		public LinqWikiHistory()
		{
			OnCreated();
		}
		
		[Column(Name="trackingNumber", Storage="_trackingNumber", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TrackingNumber
		{
			get
			{
				return this._trackingNumber;
			}
			set
			{
				if ((this._trackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._trackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[Column(Name="id", Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="title", Storage="_title", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_description", DbType="VarChar(1024)")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="content", Storage="_content", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Name="author", Storage="_author", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[Column(Name="isVisible", Storage="_isVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._isVisible;
			}
			set
			{
				if ((this._isVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._isVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[Column(Name="slug", Storage="_slug", DbType="VarChar(128)")]
		public string Slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[Column(Name="category", Storage="_category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Name="keywords", Storage="_keywords", DbType="VarChar(1024)")]
		public string Keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[Column(Name="dateCreated", Storage="_dateCreated", AutoSync=AutoSync.OnInsert, DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Name="lastUpdated", Storage="_lastUpdated", AutoSync=AutoSync.OnInsert, DbType="DateTime", IsDbGenerated=true, IsVersion=true)]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._lastUpdated;
			}
			set
			{
				if ((this._lastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._lastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[Column(Name="expirationDate", Storage="_expirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._expirationDate;
			}
			set
			{
				if ((this._expirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._expirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[Column(Name="lastUpdatedBy", Storage="_lastUpdatedBy", DbType="VarChar(50)")]
		public string LastUpdatedBy
		{
			get
			{
				return this._lastUpdatedBy;
			}
			set
			{
				if ((this._lastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._lastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[Column(Name="reachLevel", Storage="_reachLevel", DbType="Int NOT NULL")]
		public int ReachLevel
		{
			get
			{
				return this._reachLevel;
			}
			set
			{
				if ((this._reachLevel != value))
				{
					this.OnReachLevelChanging(value);
					this.SendPropertyChanging();
					this._reachLevel = value;
					this.SendPropertyChanged("ReachLevel");
					this.OnReachLevelChanged();
				}
			}
		}
		
		[Column(Name="editable", Storage="_editable", DbType="Bit NOT NULL")]
		public bool Editable
		{
			get
			{
				return this._editable;
			}
			set
			{
				if ((this._editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[Column(Name="editor", Storage="_editor", DbType="VarChar(50)")]
		public string Editor
		{
			get
			{
				return this._editor;
			}
			set
			{
				if ((this._editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[Column(Name="departmentArea", Storage="_departmentArea", DbType="VarChar(50)")]
		public string DepartmentArea
		{
			get
			{
				return this._departmentArea;
			}
			set
			{
				if ((this._departmentArea != value))
				{
					this.OnDepartmentAreaChanging(value);
					this.SendPropertyChanging();
					this._departmentArea = value;
					this.SendPropertyChanged("DepartmentArea");
					this.OnDepartmentAreaChanged();
				}
			}
		}
		
		[Column(Name="status", Storage="_status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Name="messages", Storage="_messages", DbType="VarChar(512)")]
		public string Messages
		{
			get
			{
				return this._messages;
			}
			set
			{
				if ((this._messages != value))
				{
					this.OnMessagesChanging(value);
					this.SendPropertyChanging();
					this._messages = value;
					this.SendPropertyChanged("Messages");
					this.OnMessagesChanged();
				}
			}
		}
		
		[Column(Name="authorizer", Storage="_authorizer", DbType="VarChar(50)")]
		public string Authorizer
		{
			get
			{
				return this._authorizer;
			}
			set
			{
				if ((this._authorizer != value))
				{
					this.OnAuthorizerChanging(value);
					this.SendPropertyChanging();
					this._authorizer = value;
					this.SendPropertyChanged("Authorizer");
					this.OnAuthorizerChanged();
				}
			}
		}
		
		[Column(Name="action", Storage="_action", DbType="Int NOT NULL")]
		public int Action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[Column(Name="ipAddress", Storage="_ipAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IpAddress
		{
			get
			{
				return this._ipAddress;
			}
			set
			{
				if ((this._ipAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._ipAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[Column(Name="applicationName", Storage="_applicationName", DbType="VarChar(512)")]
		public string ApplicationName
		{
			get
			{
				return this._applicationName;
			}
			set
			{
				if ((this._applicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._applicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WorkWikiItems")]
	public partial class LinqWorkWikiItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _trackingNumber;
		
		private System.Guid _id;
		
		private string _title;
		
		private string _description;
		
		private string _content;
		
		private string _author;
		
		private bool _isVisible;
		
		private string _slug;
		
		private string _category;
		
		private string _keywords;
		
		private System.DateTime _dateCreated;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
		private System.Nullable<System.DateTime> _expirationDate;
		
		private string _lastUpdatedBy;
		
		private int _reachLevel;
		
		private bool _editable;
		
		private string _editor;
		
		private string _departmentArea;
		
		private int _status;
		
		private string _messages;
		
		private string _authorizer;
		
		private int _action;
		
		private string _ipAddress;
		
		private string _applicationName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackingNumberChanging(System.Guid value);
    partial void OnTrackingNumberChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnLastUpdatedByChanging(string value);
    partial void OnLastUpdatedByChanged();
    partial void OnReachLevelChanging(int value);
    partial void OnReachLevelChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnDepartmentAreaChanging(string value);
    partial void OnDepartmentAreaChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnMessagesChanging(string value);
    partial void OnMessagesChanged();
    partial void OnAuthorizerChanging(string value);
    partial void OnAuthorizerChanged();
    partial void OnActionChanging(int value);
    partial void OnActionChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    #endregion
		
		public LinqWorkWikiItem()
		{
			OnCreated();
		}
		
		[Column(Name="trackingNumber", Storage="_trackingNumber", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TrackingNumber
		{
			get
			{
				return this._trackingNumber;
			}
			set
			{
				if ((this._trackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._trackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[Column(Name="id", Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="title", Storage="_title", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_description", DbType="VarChar(1024)")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="content", Storage="_content", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Name="author", Storage="_author", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[Column(Name="isVisible", Storage="_isVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._isVisible;
			}
			set
			{
				if ((this._isVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._isVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[Column(Name="slug", Storage="_slug", DbType="VarChar(128)")]
		public string Slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[Column(Name="category", Storage="_category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Name="keywords", Storage="_keywords", DbType="VarChar(1024)")]
		public string Keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[Column(Name="dateCreated", Storage="_dateCreated", AutoSync=AutoSync.OnInsert, DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Name="lastUpdated", Storage="_lastUpdated", AutoSync=AutoSync.OnInsert, DbType="DateTime", IsDbGenerated=true, IsVersion=true)]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._lastUpdated;
			}
			set
			{
				if ((this._lastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._lastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[Column(Name="expirationDate", Storage="_expirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._expirationDate;
			}
			set
			{
				if ((this._expirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._expirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[Column(Name="lastUpdatedBy", Storage="_lastUpdatedBy", DbType="VarChar(50)")]
		public string LastUpdatedBy
		{
			get
			{
				return this._lastUpdatedBy;
			}
			set
			{
				if ((this._lastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._lastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[Column(Name="reachLevel", Storage="_reachLevel", DbType="Int NOT NULL")]
		public int ReachLevel
		{
			get
			{
				return this._reachLevel;
			}
			set
			{
				if ((this._reachLevel != value))
				{
					this.OnReachLevelChanging(value);
					this.SendPropertyChanging();
					this._reachLevel = value;
					this.SendPropertyChanged("ReachLevel");
					this.OnReachLevelChanged();
				}
			}
		}
		
		[Column(Name="editable", Storage="_editable", DbType="Bit NOT NULL")]
		public bool Editable
		{
			get
			{
				return this._editable;
			}
			set
			{
				if ((this._editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[Column(Name="editor", Storage="_editor", DbType="VarChar(50)")]
		public string Editor
		{
			get
			{
				return this._editor;
			}
			set
			{
				if ((this._editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[Column(Name="departmentArea", Storage="_departmentArea", DbType="VarChar(50)")]
		public string DepartmentArea
		{
			get
			{
				return this._departmentArea;
			}
			set
			{
				if ((this._departmentArea != value))
				{
					this.OnDepartmentAreaChanging(value);
					this.SendPropertyChanging();
					this._departmentArea = value;
					this.SendPropertyChanged("DepartmentArea");
					this.OnDepartmentAreaChanged();
				}
			}
		}
		
		[Column(Name="status", Storage="_status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Name="messages", Storage="_messages", DbType="VarChar(512)")]
		public string Messages
		{
			get
			{
				return this._messages;
			}
			set
			{
				if ((this._messages != value))
				{
					this.OnMessagesChanging(value);
					this.SendPropertyChanging();
					this._messages = value;
					this.SendPropertyChanged("Messages");
					this.OnMessagesChanged();
				}
			}
		}
		
		[Column(Name="authorizer", Storage="_authorizer", DbType="VarChar(50)")]
		public string Authorizer
		{
			get
			{
				return this._authorizer;
			}
			set
			{
				if ((this._authorizer != value))
				{
					this.OnAuthorizerChanging(value);
					this.SendPropertyChanging();
					this._authorizer = value;
					this.SendPropertyChanged("Authorizer");
					this.OnAuthorizerChanged();
				}
			}
		}
		
		[Column(Name="action", Storage="_action", DbType="Int NOT NULL")]
		public int Action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[Column(Name="ipAddress", Storage="_ipAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IpAddress
		{
			get
			{
				return this._ipAddress;
			}
			set
			{
				if ((this._ipAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._ipAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[Column(Name="applicationName", Storage="_applicationName", DbType="VarChar(512)")]
		public string ApplicationName
		{
			get
			{
				return this._applicationName;
			}
			set
			{
				if ((this._applicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._applicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WikiCategories")]
	public partial class WikiCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CategoryName;
		
		private string _ApplicationName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    #endregion
		
		public WikiCategory()
		{
			OnCreated();
		}
		
		[Column(Storage="_CategoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationName", DbType="VarChar(512) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WikiAuthorizers")]
	public partial class WikiAuthorizer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Category;
		
		private string _UserName;
		
		private string _applicationName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    #endregion
		
		public WikiAuthorizer()
		{
			OnCreated();
		}
		
		[Column(Storage="_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Name="applicationName", Storage="_applicationName", DbType="VarChar(512)")]
		public string ApplicationName
		{
			get
			{
				return this._applicationName;
			}
			set
			{
				if ((this._applicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._applicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetRandomWikiResult
	{
		
		private System.Guid _id;
		
		public GetRandomWikiResult()
		{
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class GetRelatedWikiResult
	{
		
		private System.Guid _id;
		
		public GetRelatedWikiResult()
		{
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
